{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.jsx","services/CareerService.js","components/Career/ListCandidateComponent.jsx","components/Career/CreateCandidateComponent.jsx","components/Career/UpdateCandidateComponent.jsx","components/Career/ViewCandidateComponent.jsx","services/WriteToUsService.js","components/WriteToUs/ListWriteToUsComponent.jsx","components/WriteToUs/CreateWriteToUsComponent.jsx","components/WriteToUs/UpdateWriteToUsComponent.jsx","components/WriteToUs/ViewWriteToUsComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","props","state","className","href","Component","FooterComponent","CAREER_API_BASE_URL","axios","get","candidate","post","candidateId","put","delete","ListCandidateComponent","candidates","addCandidate","bind","editCandidate","deleteCandidate","id","CareerService","then","res","setState","filter","this","history","push","getCandidates","data","onClick","map","key","fullName","emailId","phoneNumber","style","marginLeft","viewCandidate","CreateCandidateComponent","saveOrUpdateCandidate","e","preventDefault","console","log","JSON","stringify","createCandidate","updateCandidate","changeFullNameHandler","event","target","value","changeEmailHandler","changePhoneNumberHandler","match","params","getCareerById","getTitle","placeholder","name","onChange","cancel","UpdateCandidateComponent","getCandidateById","ViewCandidateComponent","writeToUs","writeToUsId","ListWriteToUsComponent","addWriteToUs","editWriteToUs","deleteWriteToUs","WriteToUsService","getWriteToUs","userName","message","viewWriteToUs","CreateWriteToUsComponent","saveOrUpdateWriteToUs","createWriteToUs","updateWriteToUs","changeUserNameHandler","changeMessageHandler","getWriteToUsById","UpdateWriteToUsComponent","ViewWriteToUsComponent","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b954e246.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"https://adroit-vantage.s3.ap-southeast-1.amazonaws.com/index.html\" className=\"navbar-brand\">AV Career App</a></div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className = \"footer\">\r\n                    <span className=\"text-muted\">All Rights Reserved 2021 @Adroit-Vantage</span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent\r\n","import axios from 'axios';\r\n\r\nconst CAREER_API_BASE_URL = \"https://ec2-13-213-233-77.ap-southeast-1.compute.amazonaws.com:9090/api/v1/candidates\";\r\n\r\nclass CareerService {\r\n\r\n    getCandidates(){\r\n        return axios.get(CAREER_API_BASE_URL);\r\n    }\r\n\r\n    createCandidate(candidate){\r\n        return axios.post(CAREER_API_BASE_URL, candidate);\r\n    }\r\n\r\n    getCandidateById(candidateId){\r\n        return axios.get(CAREER_API_BASE_URL + '/' + candidateId);\r\n    }\r\n\r\n    updateCandidate(candidate, candidateId){\r\n        return axios.put(CAREER_API_BASE_URL + '/' + candidateId, candidate);\r\n    }\r\n\r\n    deleteCandidate(candidateId){\r\n        return axios.delete(CAREER_API_BASE_URL + '/' + candidateId);\r\n    }\r\n}\r\n\r\nexport default new CareerService()","import React, { Component } from 'react'\r\nimport CareerService from '../../services/CareerService'\r\n\r\nclass ListCandidateComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                candidates: []\r\n        }\r\n        this.addCandidate = this.addCandidate.bind(this);\r\n        this.editCandidate = this.editCandidate.bind(this);\r\n        this.deleteCandidate = this.deleteCandidate.bind(this);\r\n    }\r\n\r\n    deleteCandidate(id){\r\n        CareerService.deleteCandidate(id).then( res => {\r\n            this.setState({candidates: this.state.candidates.filter(candidate => candidate.id !== id)});\r\n        });\r\n    }\r\n    viewCandidate(id){\r\n        this.props.history.push(`/view-candidate/${id}`);\r\n    }\r\n    editCandidate(id){\r\n        this.props.history.push(`/update-candidate/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        CareerService.getCandidates().then((res) => {\r\n            this.setState({ candidates: res.data});\r\n        });\r\n    }\r\n\r\n    addCandidate(){\r\n        this.props.history.push('/add-candidate/_add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">Candidates List</h2>\r\n                 <div className = \"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addCandidate}> Add Candidate</button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Full Name</th>\r\n                                    <th> Email Id</th>\r\n                                    <th> Phone Number</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.candidates.map(\r\n                                        candidate => \r\n                                        <tr key = {candidate.id}>\r\n                                             <td> {candidate.fullName} </td>   \r\n                                             <td> {candidate.emailId}</td>\r\n                                             <td> {candidate.phoneNumber}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editCandidate(candidate.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteCandidate(candidate.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewCandidate(candidate.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListCandidateComponent\r\n","import React, { Component } from 'react'\r\nimport CareerService from '../../services/CareerService';\r\n\r\nclass CreateCandidateComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            fullName: '',\r\n            emailId: '',\r\n            phoneNumber: ''\r\n        }\r\n        this.changeFullNameHandler = this.changeFullNameHandler.bind(this);\r\n        this.saveOrUpdateCandidate = this.saveOrUpdateCandidate.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            CareerService.getCareerById(this.state.id).then( (res) =>{\r\n                let candidate = res.data;\r\n                this.setState({fullName: candidate.fullName,\r\n                    emailId : candidate.emailId,\r\n                    phoneNumber: candidate.phoneNumber\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateCandidate = (e) => {\r\n        e.preventDefault();\r\n        let candidate = {fullName: this.state.fullName, emailId: this.state.emailId, phoneNumber: this.state.phoneNumber};\r\n        console.log('candidate => ' + JSON.stringify(candidate));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            CareerService.createCandidate(candidate).then(res =>{\r\n                this.props.history.push('/candidates');\r\n            });\r\n        }else{\r\n            CareerService.updateCandidate(candidate, this.state.id).then( res => {\r\n                this.props.history.push('/candidates');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeFullNameHandler= (event) => {\r\n        this.setState({fullName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    changePhoneNumberHandler= (event) => {\r\n        this.setState({phoneNumber: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/candidates');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Candidate</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Candidate</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Full Name: </label>\r\n                                            <input placeholder=\"Full Name\" name=\"fullName\" className=\"form-control\" \r\n                                                value={this.state.fullName} onChange={this.changeFullNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Phone Number: </label>\r\n                                            <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\" \r\n                                                value={this.state.phoneNumber} onChange={this.changePhoneNumberHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateCandidate}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateCandidateComponent\r\n","import React, { Component } from 'react'\r\nimport CareerService from '../../services/CareerService';\r\n\r\nclass UpdateCandidateComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            fullName: '',\r\n            emailId: '',\r\n            phoneNumber: ''\r\n        }\r\n        this.changeFullNameHandler = this.changeFullNameHandler.bind(this);\r\n        this.updateCandidate = this.updateCandidate.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        CareerService.getCandidateById(this.state.id).then( (res) =>{\r\n            let candidate = res.data;\r\n            this.setState({fullName: candidate.fullName,\r\n                emailId : candidate.emailId,\r\n                phoneNumber: candidate.phoneNumber\r\n            });\r\n        });\r\n    }\r\n\r\n    updateCandidate = (e) => {\r\n        e.preventDefault();\r\n        let candidate = {fullName: this.state.fullName, emailId: this.state.emailId, phoneNumber: this.state.phoneNumber};\r\n        console.log('candidate => ' + JSON.stringify(candidate));\r\n        console.log('id => ' + JSON.stringify(this.state.id));\r\n        CareerService.updateCandidate(candidate, this.state.id).then( res => {\r\n            this.props.history.push('/candidates');\r\n        });\r\n    }\r\n\r\n    changeFullNameHandler= (event) => {\r\n        this.setState({fullName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    changePhoneNumberHandler= (event) => {\r\n        this.setState({phoneNumber: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/candidates');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-center\">Update Candidate</h3>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Full Name: </label>\r\n                                            <input placeholder=\"Full Name\" name=\"fullName\" className=\"form-control\" \r\n                                                value={this.state.fullName} onChange={this.changeFullNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Phone Number: </label>\r\n                                            <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\" \r\n                                                value={this.state.phoneNumber} onChange={this.changePhoneNumberHandler}/>\r\n                                        </div>\r\n                                        <button className=\"btn btn-success\" onClick={this.updateCandidate}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateCandidateComponent\r\n","import React, { Component } from 'react'\r\nimport CareerService from '../../services/CareerService'\r\n\r\nclass ViewCandidateComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            candidate: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        CareerService.getCandidateById(this.state.id).then( res => {\r\n            this.setState({candidate: res.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View { this.state.candidate.fullName }'s Details</h3>\r\n                    <div className = \"card-body\">\r\n                        <div className = \"row\">\r\n                            <label> Full Name: </label>\r\n                            <div> { this.state.candidate.fullName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Email ID: </label>\r\n                            <div> { this.state.candidate.emailId }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Phone Number: </label>\r\n                            <div> { this.state.candidate.phoneNumber }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewCandidateComponent\r\n","import axios from 'axios';\r\n\r\nconst CAREER_API_BASE_URL = \"https://ec2-13-213-233-77.ap-southeast-1.compute.amazonaws.com:9090/api/v1/writeToUs\";\r\n\r\nclass WriteToUsService {\r\n\r\n    getWriteToUs(){\r\n        return axios.get(CAREER_API_BASE_URL);\r\n    }\r\n\r\n    createWriteToUs(writeToUs){\r\n        return axios.post(CAREER_API_BASE_URL, writeToUs);\r\n    }\r\n\r\n    getWriteToUsById(writeToUsId){\r\n        return axios.get(CAREER_API_BASE_URL + '/' + writeToUsId);\r\n    }\r\n\r\n    updateWriteToUs(writeToUs, writeToUsId){\r\n        return axios.put(CAREER_API_BASE_URL + '/' + writeToUsId, writeToUs);\r\n    }\r\n\r\n    deleteWriteToUs(writeToUsId){\r\n        return axios.delete(CAREER_API_BASE_URL + '/' + writeToUsId);\r\n    }\r\n}\r\n\r\nexport default new WriteToUsService()","import React, { Component } from 'react'\r\nimport WriteToUsService from '../../services/WriteToUsService'\r\n\r\nclass ListWriteToUsComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                writeToUs: []\r\n        }\r\n        this.addWriteToUs = this.addWriteToUs.bind(this);\r\n        this.editWriteToUs = this.editWriteToUs.bind(this);\r\n        this.deleteWriteToUs = this.deleteWriteToUs.bind(this);\r\n    }\r\n\r\n    deleteWriteToUs(id){\r\n        WriteToUsService.deleteWriteToUs(id).then( res => {\r\n            this.setState({writeToUs: this.state.writeToUs.filter(writeToUs => writeToUs.id !== id)});\r\n        });\r\n    }\r\n    viewWriteToUs(id){\r\n        this.props.history.push(`/view-writeToUs/${id}`);\r\n    }\r\n    editWriteToUs(id){\r\n        this.props.history.push(`/update-writeToUs/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        WriteToUsService.getWriteToUs().then((res) => {\r\n            this.setState({ writeToUs: res.data});\r\n        });\r\n    }\r\n\r\n    addWriteToUs(){\r\n        this.props.history.push('/add-writeToUs/_add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">WriteToUs List</h2>\r\n                 <div className = \"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addWriteToUs}> Add WriteToUs</button>\r\n                 </div>\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> User Name</th>\r\n                                    <th> Email Id</th>\r\n                                    <th> Phone Number</th>\r\n                                    <th> Message</th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.writeToUs.map(\r\n                                        writeToUs => \r\n                                        <tr key = {writeToUs.id}>\r\n                                             <td> {writeToUs.userName} </td>   \r\n                                             <td> {writeToUs.emailId}</td>\r\n                                             <td> {writeToUs.phoneNumber}</td>\r\n                                             <td> {writeToUs.message}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editWriteToUs(writeToUs.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteWriteToUs(writeToUs.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewWriteToUs(writeToUs.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListWriteToUsComponent\r\n","import React, { Component } from 'react'\r\nimport WriteToUsService from '../../services/WriteToUsService';\r\n\r\nclass CreateWriteToUsComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            userName: '',\r\n            emailId: '',\r\n            phoneNumber: '',\r\n            message: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.saveOrUpdateWriteToUs = this.saveOrUpdateWriteToUs.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            WriteToUsService.getWriteToUsById(this.state.id).then( (res) =>{\r\n                let writeToUs = res.data;\r\n                this.setState({\r\n                    userName: writeToUs.userName,\r\n                    emailId : writeToUs.emailId,\r\n                    phoneNumber: writeToUs.phoneNumber,\r\n                    message: writeToUs.message\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateWriteToUs = (e) => {\r\n        e.preventDefault();\r\n        let writeToUs = {userName: this.state.userName, emailId: this.state.emailId, phoneNumber: this.state.phoneNumber, message: this.state.message};\r\n        console.log('writeToUs => ' + JSON.stringify(writeToUs));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            WriteToUsService.createWriteToUs(writeToUs).then(res =>{\r\n                this.props.history.push('/writeToUs');\r\n            });\r\n        }else{\r\n            WriteToUsService.updateWriteToUs(writeToUs, this.state.id).then( res => {\r\n                this.props.history.push('/writeToUs');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeUserNameHandler= (event) => {\r\n        this.setState({userName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    changePhoneNumberHandler= (event) => {\r\n        this.setState({phoneNumber: event.target.value});\r\n    }\r\n\r\n    changeMessageHandler= (event) => {\r\n        this.setState({message: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/writeToUs');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add WriteToUs</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update WriteToUs</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> User Name: </label>\r\n                                            <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\" \r\n                                                value={this.state.userName} onChange={this.changeUserNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Phone Number: </label>\r\n                                            <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\" \r\n                                                value={this.state.phoneNumber} onChange={this.changePhoneNumberHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Message: </label>\r\n                                            <input placeholder=\"Message\" name=\"message\" className=\"form-control\" \r\n                                                value={this.state.message} onChange={this.changeMessageHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateWriteToUs}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateWriteToUsComponent\r\n","import React, { Component } from 'react'\r\nimport WriteToUsService from '../../services/WriteToUsService';\r\n\r\nclass UpdateWriteToUsComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            userName: '',\r\n            emailId: '',\r\n            phoneNumber: '',\r\n            message: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.updateWriteToUs = this.updateWriteToUs.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        WriteToUsService.getWriteToUsById(this.state.id).then( (res) =>{\r\n            let writeToUs = res.data;\r\n            this.setState({userName: writeToUs.userName,\r\n                emailId : writeToUs.emailId,\r\n                phoneNumber: writeToUs.phoneNumber,\r\n                message: writeToUs.message\r\n            });\r\n        });\r\n    }\r\n\r\n    updateWriteToUs = (e) => {\r\n        e.preventDefault();\r\n        let writeToUs = {userName: this.state.userName, emailId: this.state.emailId, phoneNumber: this.state.phoneNumber, message: this.state.message};\r\n        console.log('writeToUs => ' + JSON.stringify(writeToUs));\r\n        console.log('id => ' + JSON.stringify(this.state.id));\r\n        WriteToUsService.updateWriteToUs(writeToUs, this.state.id).then( res => {\r\n            this.props.history.push('/writeToUs');\r\n        });\r\n    }\r\n    \r\n    changeUserNameHandler= (event) => {\r\n        this.setState({userName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    changePhoneNumberHandler= (event) => {\r\n        this.setState({phoneNumber: event.target.value});\r\n    }\r\n\r\n    changeMessageHandler= (event) => {\r\n        this.setState({message: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/writeToUs');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                <h3 className=\"text-center\">Update WriteToUs</h3>\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> User Name: </label>\r\n                                            <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\" \r\n                                                value={this.state.userName} onChange={this.changeUserNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Phone Number: </label>\r\n                                            <input placeholder=\"Phone Number\" name=\"phoneNumber\" className=\"form-control\" \r\n                                                value={this.state.phoneNumber} onChange={this.changePhoneNumberHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Message: </label>\r\n                                            <input placeholder=\"Message\" name=\"message\" className=\"form-control\" \r\n                                                value={this.state.message} onChange={this.changeMessageHandler}/>\r\n                                        </div>\r\n                                        <button className=\"btn btn-success\" onClick={this.updateWriteToUs}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateWriteToUsComponent\r\n","import React, { Component } from 'react'\r\nimport WriteToUsService from '../../services/WriteToUsService'\r\n\r\nclass ViewWriteToUsComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            writeToUs: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        WriteToUsService.getWriteToUsById(this.state.id).then( res => {\r\n            this.setState({writeToUs: res.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View { this.state.writeToUs.userName }'s Details</h3>\r\n                    <div className = \"card-body\">\r\n                        <div className = \"row\">\r\n                            <label> User Name: </label>\r\n                            <div> { this.state.writeToUs.userName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Email ID: </label>\r\n                            <div> { this.state.writeToUs.emailId }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Phone Number: </label>\r\n                            <div> { this.state.writeToUs.phoneNumber }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewWriteToUsComponent\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport FooterComponent from './components/FooterComponent';\r\n//import HomeComponent from './components/HomeComponent';\r\nimport ListCandidateComponent from './components/Career/ListCandidateComponent';\r\nimport CreateCandidateComponent from './components/Career/CreateCandidateComponent';\r\nimport UpdateCandidateComponent from './components/Career/UpdateCandidateComponent';\r\nimport ViewCandidateComponent from './components/Career/ViewCandidateComponent';\r\nimport ListWriteToUsComponent from './components/WriteToUs/ListWriteToUsComponent';\r\nimport CreateWriteToUsComponent from './components/WriteToUs/CreateWriteToUsComponent';\r\nimport UpdateWriteToUsComponent from './components/WriteToUs/UpdateWriteToUsComponent';\r\nimport ViewWriteToUsComponent from './components/WriteToUs/ViewWriteToUsComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Router>\r\n              <HeaderComponent />\r\n                <div className=\"container\">\r\n                    <Switch> \r\n                          {/* Career Service */}\r\n                          {/*<Route path = \"/\" exact component = {HomeComponent}></Route>*/}\r\n                          <Route path = \"/\" exact component = {ListCandidateComponent}></Route>\r\n                          <Route path = \"/candidates\" component = {ListCandidateComponent}></Route>\r\n                          <Route path = \"/add-candidate/:id\" component = {CreateCandidateComponent}></Route>\r\n                          <Route path = \"/view-candidate/:id\" component = {ViewCandidateComponent}></Route>\r\n                          <Route path = \"/update-candidate/:id\" component = {UpdateCandidateComponent}></Route>\r\n\r\n                          {/* Write to us service */}\r\n                          <Route path = \"/writeToUs\" component = {ListWriteToUsComponent}></Route>\r\n                          <Route path = \"/add-writeToUs/:id\" component = {CreateWriteToUsComponent}></Route>\r\n                          <Route path = \"/view-writeToUs/:id\" component = {ViewWriteToUsComponent}></Route>\r\n                          <Route path = \"/update-writeToUs/:id\" component = {UpdateWriteToUsComponent}></Route>\r\n                    </Switch>\r\n                </div>\r\n              <FooterComponent />\r\n        </Router>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/*const cors = require('cors');\r\nconst corsOptions ={\r\n    origin:'http://localhost:3000', \r\n    credentials:true,            //access-control-allow-credentials:true\r\n    optionSuccessStatus:200\r\n}*/\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}